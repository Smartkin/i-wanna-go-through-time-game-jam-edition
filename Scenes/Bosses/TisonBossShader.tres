[gd_resource type="VisualShader" load_steps=6 format=2]

[ext_resource path="res://Shaders/rgba/blur/zoomBlur.gd" type="Script" id=1]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "texture"

[sub_resource type="VisualShaderNodeCustom" id=10]
default_input_values = [ 2, -1.0, 3, Vector3( 0.25, 0.5, 0 ), 4, 10.0, 5, 0.01 ]
initialized = true
script = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "ScalarUniform"
default_value_enabled = true
default_value = 2.0

[resource]
code = "shader_type canvas_item;
uniform float ScalarUniform = 2;


// ZoomBlur

vec4 zoomBlurFunc(sampler2D _tex_z00m_blur, vec2 _uv_z00m_blur, int _amount_z00m_blur, vec2 _center_zoom, float _lgt_z00m_blur, float _lod_z00m_blur){
	vec4 _col_z00m_blur;
	if (_lod_z00m_blur < 0.0){
		_col_z00m_blur = texture(_tex_z00m_blur, _uv_z00m_blur);
		for (int i = 1; i <= _amount_z00m_blur; i++){
			float _temp_d_z00m_blur = _lgt_z00m_blur * float(i);
			vec2 px = _uv_z00m_blur * (1.0 - _temp_d_z00m_blur) + _center_zoom * _temp_d_z00m_blur;
			_col_z00m_blur += texture(_tex_z00m_blur, px);
		}
	}else{
		_col_z00m_blur = textureLod(_tex_z00m_blur, _uv_z00m_blur, _lod_z00m_blur);
		for (int i = 1; i <= _amount_z00m_blur; i++){
			float _temp_d_z00m_blur = _lgt_z00m_blur * float(i);
			vec2 px = _uv_z00m_blur * (1.0 - _temp_d_z00m_blur) + _center_zoom * _temp_d_z00m_blur;
			_col_z00m_blur += textureLod(_tex_z00m_blur, px, _lod_z00m_blur);
		}
	}
	_col_z00m_blur = _col_z00m_blur / float(_amount_z00m_blur + 1);
	return _col_z00m_blur;
}


void vertex() {
// Output:0

}

void fragment() {
// Input:3

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// ScalarUniform:6
	float n_out6p0 = ScalarUniform;

// ZoomBlur:5
	float n_in5p2 = -1.00000;
	vec3 n_in5p3 = vec3(0.25000, 0.50000, 0.00000);
	float n_in5p5 = 0.01000;
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_out5p0n_out5p1 = zoomBlurFunc(TEXTURE, n_out2p0.xy, int(n_out6p0), n_in5p3.xy, n_in5p5, n_in5p2);
		n_out5p0 = n_out5p0n_out5p1.rgb;
		n_out5p1 = n_out5p0n_out5p1.a;
	}

// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out5p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -532.158, 3.20139 )
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -320, 160 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -200, 60 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( 40, 100 )
nodes/fragment/6/node = SubResource( 13 )
nodes/fragment/6/position = Vector2( -380, 260 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 5, 1, 0, 1, 3, 0, 5, 0, 2, 0, 5, 1, 6, 0, 5, 4 )
